Index: app/src/main/java/com/focalstudio/focalhub/ui/Theme.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.focalstudio.focalhub.ui\r\n\r\nimport android.app.Activity\r\nimport android.os.Build\r\nimport androidx.compose.foundation.isSystemInDarkTheme\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.darkColorScheme\r\nimport androidx.compose.material3.dynamicDarkColorScheme\r\nimport androidx.compose.material3.dynamicLightColorScheme\r\nimport androidx.compose.material3.lightColorScheme\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.SideEffect\r\nimport androidx.compose.ui.graphics.toArgb\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.platform.LocalView\r\nimport androidx.core.view.WindowCompat\r\n\r\nprivate val DarkColorScheme = darkColorScheme(\r\n    primary = Indigo500,\r\n    secondary = Pink200,\r\n    tertiary = Indigo100\r\n)\r\n\r\nprivate val LightColorScheme = lightColorScheme(\r\n    primary = Indigo500,\r\n    secondary = Pink200,\r\n    tertiary = Indigo100\r\n\r\n    /* Other default colors to override\r\n    background = Color(0xFFFFFBFE),\r\n    surface = Color(0xFFFFFBFE),\r\n    onPrimary = Color.White,\r\n    onSecondary = Color.White,\r\n    onTertiary = Color.White,\r\n    onBackground = Color(0xFF1C1B1F),\r\n    onSurface = Color(0xFF1C1B1F),\r\n    */\r\n)\r\n\r\n@Composable\r\nfun FocalHubTheme(\r\n    darkTheme: Boolean = isSystemInDarkTheme(),\r\n    // Dynamic color is available on Android 12+\r\n    dynamicColor: Boolean = true,\r\n    content: @Composable () -> Unit\r\n) {\r\n    val colorScheme = when {\r\n        dynamicColor && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S -> {\r\n            val context = LocalContext.current\r\n            if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)\r\n        }\r\n\r\n        darkTheme -> DarkColorScheme\r\n        else -> LightColorScheme\r\n    }\r\n    val view = LocalView.current\r\n    if (!view.isInEditMode) {\r\n        SideEffect {\r\n            val window = (view.context as Activity).window\r\n            window.statusBarColor = colorScheme.primary.toArgb()\r\n            WindowCompat.getInsetsController(window, view).isAppearanceLightStatusBars = darkTheme\r\n        }\r\n    }\r\n\r\n    MaterialTheme(\r\n        colorScheme = colorScheme,\r\n        typography = Typography,\r\n        content = content\r\n    )\r\n}
===================================================================
diff --git a/app/src/main/java/com/focalstudio/focalhub/ui/Theme.kt b/app/src/main/java/com/focalstudio/focalhub/ui/Theme.kt
--- a/app/src/main/java/com/focalstudio/focalhub/ui/Theme.kt	
+++ b/app/src/main/java/com/focalstudio/focalhub/ui/Theme.kt	
@@ -10,6 +10,7 @@
 import androidx.compose.material3.lightColorScheme
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.SideEffect
+import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.graphics.toArgb
 import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.platform.LocalView
@@ -25,16 +26,6 @@
     primary = Indigo500,
     secondary = Pink200,
     tertiary = Indigo100
-
-    /* Other default colors to override
-    background = Color(0xFFFFFBFE),
-    surface = Color(0xFFFFFBFE),
-    onPrimary = Color.White,
-    onSecondary = Color.White,
-    onTertiary = Color.White,
-    onBackground = Color(0xFF1C1B1F),
-    onSurface = Color(0xFF1C1B1F),
-    */
 )
 
 @Composable
@@ -57,7 +48,8 @@
     if (!view.isInEditMode) {
         SideEffect {
             val window = (view.context as Activity).window
-            window.statusBarColor = colorScheme.primary.toArgb()
+            //window.statusBarColor = colorScheme.primary.toArgb()
+            window.statusBarColor = Color.DarkGray.toArgb()
             WindowCompat.getInsetsController(window, view).isAppearanceLightStatusBars = darkTheme
         }
     }
